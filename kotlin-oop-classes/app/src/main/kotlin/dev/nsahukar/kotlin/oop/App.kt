/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.nsahukar.kotlin.oop


class Person constructor(val firstName: String, val lastName: String, val age: Int?) {
    constructor(firstName: String, lastName: String): this(firstName, lastName, null)
}

class Parson(firstName: String, lastName: String, howOld: Int?) {
    private val name: String
    private val age: Int?

    init {
        this.name = "$firstName $lastName"
        this.age = howOld
    }

    fun getName(): String = this.name
    fun getAge(): Int? = this.age
}

class BasicGraph(private val name: String) {
    inner class Line(val x1: Int, val y1: Int, val x2: Int, val y2: Int) {
        fun draw(): Unit {
            println("Drawing line from ($x1, $y1) to ($x2, $y2) for graph $name")
        }
    }

    fun draw(): Unit {
        println("Drawing the graph $name")
    }
}

class A {
    private val somefield: Int = 1
    inner class B {
        private val somefield: Int = 2
        fun foo() {
            println("Field <somefield> from B " + this.somefield)
            println("Field <somefield> from B " + this@B.somefield)
            println("Field <somefield> from A " + this@A.somefield)
        }
    }
}

interface Timeout

inline class MillisecondsTimeout(val l: Long) : Timeout

fun asInline(millis: MillisecondsTimeout) {
    println(millis)
}

fun <T> asGeneric(x: T) {
    println(x)
}

fun asInterface(timeout: Timeout) {
    println(timeout)
}

fun asNullable(millis: MillisecondsTimeout?) {
    println(millis)
}

interface Printable {
    fun print(): Unit
}

public enum class Word : Printable {
    HELLO {
        override fun print() {
            println("Word is HELLO")
        }
    },
    BYE {
        override fun print() {
            println("Word is BYE")
        }
    }
}


fun main() {
    val p1 = Person("Nikhil", "Sahukar", 33)
    val p2 = Person("Jane", "Smith")

    val par = Parson("Alex", "Smith", 29)

    println("${p1.firstName} ${p1.lastName} is ${p1.age} years old.")
    println("${p2.firstName} ${p2.lastName} is ${p2.age?.toString() ?: "?"} years old")

    println("${par.getName()} is ${par.getAge()} years old.")

    val line = BasicGraph("Stocks").Line(1, 0, -2, 0)
    line.draw()

    A().B().foo()

    val millis = MillisecondsTimeout(5000)
    asInline(millis)
    asGeneric(millis)
    asInterface(millis)
    asNullable(millis)

    val hello = Word.HELLO
    hello.print()

    // Following code is defined in the Static.kt file
    Singleton.doSomething()
    println(showFirstCharacter("Kotlin is cool!"))
    Singleton.doSomething()

    SingletonDerive.something()

    val stud = Student.create("Jack Wallace")
    println(stud.name)
}
